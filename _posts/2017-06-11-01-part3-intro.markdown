---
title: 介绍
layout: post
date: 2017-06-11 23:59:59
permalink: part-three-intro
part: 3
share: true
---

在第三部分，我们将加入*数据库迁移*和*Hash密码*用来实现基于JSON Web Tokens(JWTs)实现的*token验证机制*。我们将会把重心转移到*React Router*应用到React应用里，用来实现客户端路由，以及客户端验证。

#### 目标

在第三部分末，你将学会……

1. 使用Flask Migration处理数据库迁移
1. 配置Flask Bcrypt实现密码Hash
1. 使用JWTs实现用户验证
1. 编写测试用来创建和验证JWTs和用户验证
1. 使用React Router定义React客户端路由
1. 使用React Bootstrap构建UI组件
1. 阐述authentication和authorization区别
1. 实现authorization

#### App

<div style="text-align:left;">
  <img src="/assets/img/flask-tdd-logo-part3.png" style="max-width: 100%; border:0; box-shadow: none;" alt="flask tdd logo">
</div>

查看运行在EC2示例 - [http://54.89.0.180/](http://54.89.0.180/)

也可以尝试测试以下链接。

| Endpoint        | HTTP 方法    | 验证?           | 结果            |
|-----------------|-------------|-----------------|-------------------|
| /auth/register  | POST        | 否              | 用户注册           |
| /auth/login     | POST        | 否              | 用户登录           |
| /auth/logout    | GET         | 是              | 用户登出           | 
| /auth/status    | GET         | 是              | 检查用户状态        |
| /users          | GET         | 否              | 获取所有用户     |
| /users/:id      | GET         | 否              | 获取单个用户   |
| /users          | POST        | 是 (admin)      | 添加一个用户        |
| /ping           | GET         | 否              | 健康检查      |

获取代码:

1. [flask-microservices-main](https://github.com/realpython/flask-microservices-main/releases/tag/part3)
1. [flask-microservices-users](https://github.com/realpython/flask-microservices-users/releases/tag/part3)
1. [flask-microservices-client](https://github.com/realpython/flask-microservices-client/releases/tag/part3)
